@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using ShoeShop.Models
@model IndexModel
@{
    ViewData["Title"] = "Домашняя страница";

    Dictionary<string, string> sortDictionary = new Dictionary<string, string>(new KeyValuePair<string, string>[] {
        new KeyValuePair<string, string>("Default", "По умолчанию"),
        new KeyValuePair<string, string>("Cheaper", "Сначала Дешевле"),
        new KeyValuePair<string, string>("Expensive", "Сначала Дороже"),
        new KeyValuePair<string, string>("ByDate", "По дате"),
    });
}

@* Заголовок *@
<div class="d-flex flex-row-reverse p-1 mt-3">
    <h1>Каталог</h1>
</div>

@* Панель сортировки *@
<div class="d-flex flex-row-reverse border border-1 p-1 mt-3">
    <form id="sortingForm" asp-page="/Index" method="get" class="ms-2">
        <select name="sort" class="form-select" aria-label="Сортировка" onchange="document.getElementById('sortingForm').submit()">
            @foreach (string item in Enum.GetNames(typeof(ProductSorting))) {
                if (Model.Sorting.ToString() == item) {
                    <option value="@item" selected>@sortDictionary[item]</option>
                } else {
                    <option value="@item">@sortDictionary[item]</option>
                }
            }
        </select>
    </form>
</div>

@* Панель списка заказов *@
<div class="row">
    @if (Model.Products == null || Model.Products.Count() == 0) {
        <p class="text-center fs-1">Товары не найдены</p>
    }

    @foreach (Product product in Model.Products ?? Enumerable.Empty<Product>()) {
        <div class="col-sm-3 mt-3">
            <div class="card h-100">
                <div id="carousel-@product.Id" class="carousel slide" data-bs-ride="false">
                    <div class="carousel-indicators">
                        @if (product.Images?.Count > 0) {
                            <button type="button" data-bs-target="#carousel-@product.Id" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                            @for (int x = 1; x < product.Images.Count; x++) {
                                <button type="button" data-bs-target="#carousel-@product.Id" data-bs-slide-to="@x" aria-label="Slide @(x + 1)"></button>
                            }
                        }
                    </div>
                    <div class="carousel-inner">
                        @if (product.Images?.Count > 0) {
                            <div class="carousel-item active">
                                <img src="@product.Images[0].Path" class="d-block w-100" alt="@product.Images[0].Alt">
                            </div>

                            @for (int x = 1; x < product.Images.Count; x++) {
                                <div class="carousel-item">
                                    <img src="@product.Images[x].Path" class="d-block w-100" alt="@product.Images[x].Alt">
                                </div>
                            }
                        }
                    </div>
                    @* Стрелки предыдущий следующий *@
                    <button class="carousel-control-prev" type="button" data-bs-target="#carousel-@product.Id" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Предыдущий</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carousel-@product.Id" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Следующий</span>
                    </button>
                </div>
                <div class="card-body">
                    <a class="link-secondary nav-link" href="#">
                        <p class="card-title  fs-4">@product.Name</p>
                    </a>
                    <p class="card-text">@product.Description</p>
                    <p class="card-text h3 text-end">@product.Price руб.</p>
                    <a asp-page="Product" asp-route-id="@product.Id" class="btn btn-primary">Подробнее...</a>
                </div>
            </div>
        </div>
    }
</div>

@* Панель пагинации *@
<div class="d-flex flex-row-reverse border border-1 p-1 mt-3">
    @await Component.InvokeAsync(typeof(ShoeShop.Paginations.Components.PaginationViewComponent), new {
            currentPage = Model.CurrentPage,
            elementsPerPage = Model.ElementsPerPage,
            totalElementsCount = Model.TotalElementsCount,
            page = "/Index",
            routeData = new Dictionary<string, string>([new KeyValuePair<string, string>("sort", Model.Sorting.ToString())])
        })
</div>
